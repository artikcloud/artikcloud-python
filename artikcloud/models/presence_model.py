# coding: utf-8

"""
    ARTIK Cloud API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class PresenceModel(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, connected=None, last_seen_on=None):
        """
        PresenceModel - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'connected': 'bool',
            'last_seen_on': 'int'
        }

        self.attribute_map = {
            'connected': 'connected',
            'last_seen_on': 'lastSeenOn'
        }

        self._connected = connected
        self._last_seen_on = last_seen_on

    @property
    def connected(self):
        """
        Gets the connected of this PresenceModel.

        :return: The connected of this PresenceModel.
        :rtype: bool
        """
        return self._connected

    @connected.setter
    def connected(self, connected):
        """
        Sets the connected of this PresenceModel.

        :param connected: The connected of this PresenceModel.
        :type: bool
        """

        self._connected = connected

    @property
    def last_seen_on(self):
        """
        Gets the last_seen_on of this PresenceModel.

        :return: The last_seen_on of this PresenceModel.
        :rtype: int
        """
        return self._last_seen_on

    @last_seen_on.setter
    def last_seen_on(self, last_seen_on):
        """
        Sets the last_seen_on of this PresenceModel.

        :param last_seen_on: The last_seen_on of this PresenceModel.
        :type: int
        """

        self._last_seen_on = last_seen_on

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, PresenceModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
